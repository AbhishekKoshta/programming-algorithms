// Write a program to check a board of Sudoku of size 9x9 is valid or not.

// example-

// Input: board =
// [["5","3",".",".","7",".",".",".","."]
// ,["6",".",".","1","9","5",".",".","."]
// ,[".","9","8",".",".",".",".","6","."]
// ,["8",".",".",".","6",".",".",".","3"]
// ,["4",".",".","8",".","3",".",".","1"]
// ,["7",".",".",".","2",".",".",".","6"]
// ,[".","6",".",".",".",".","2","8","."]
// ,[".",".",".","4","1","9",".",".","5"]
// ,[".",".",".",".","8",".",".","7","9"]]
// Output: true

// Input: board =
// [["4","3",".",".","7",".",".",".","."]
// ,["6",".",".","1","9","5",".",".","."]
// ,[".","9","8",".",".",".",".","6","."]
// ,["8",".",".",".","6",".",".",".","3"]
// ,["4",".",".","8",".","3",".",".","1"]
// ,["7",".",".",".","2",".",".",".","6"]
// ,[".","6",".",".",".",".","2","8","."]
// ,[".",".",".","4","1","9",".",".","5"]
// ,[".",".",".",".","8",".",".","7","1"]]
// Output: false

#include<bits/stdc++.h>
using namespace std;

class Solution {
public:    
    bool isValidSudoku(vector<vector<char>>& board) {
        vector<unordered_set<int>> row(9);
        vector<unordered_set<int>> col(9);
        vector<unordered_set<int>> block(9);
        int temp;
        for(int r=0; r<9; r++){
            for(int c=0; c<9; c++){
                if(board[r][c] == '.') continue;
                temp = int(board[r][c]);
                if(row[r].find(temp) != row[r].end() || col[c].find(temp)!=col[c].end()){
                    return false;
                }
                else{
                    row[r].emplace( temp );
                
                    col[c].emplace( temp );
                }
                
                if(block[(r/3)*3 + c/3].find(temp) != block[(r/3)*3 + c/3].end() ){
                    return false;
                }
                else block[(r/3)*3 + c/3].emplace(temp);
            }
        }
        return true;
    }
};

int main(){
    Solution sol = Solution();
    vector<vector<char>> board = {{"5","3",".",".","7",".",".",".","."},
                                  {"6",".",".","1","9","5",".",".","."},
                                  {".","9","8",".",".",".",".","6","."},
                                  {"8",".",".",".","6",".",".",".","3"},
                                  {"4",".",".","8",".","3",".",".","1"},
                                  {"7",".",".",".","2",".",".",".","6"},
                                  {".","6",".",".",".",".","2","8","."},
                                  {".",".",".","4","1","9",".",".","5"},
                                  {".",".",".",".","8",".",".","7","9"}};
  cout<< sol.isValidSudoku(board);
  return 0;
}

